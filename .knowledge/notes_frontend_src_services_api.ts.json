{"is_source_file": true, "format": "TypeScript", "description": "This file defines the API service functions for interacting with a notes backend, including CRUD operations and environment configuration.", "external_files": ["fetch API (built-in browser API)"], "external_methods": ["fetch"], "published": ["listNotes", "getNote", "createNote", "updateNote", "deleteNote", "isApiConfigured", "Note", "NewNotePayload"], "classes": [], "methods": [{"name": "async function request<T>(path: string, options: RequestInit = {}): Promise<T> { request", "description": "Performs an HTTP request to the API endpoint, handling JSON serialization, error handling, and response parsing.", "scope": "", "scopeKind": ""}, {"name": "export async function listNotes(query?: string): Promise<Note[]> { listNotes", "description": "Fetches a list of notes, optionally filtered by a search query.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: string): Promise<Note> { getNote", "description": "Retrieves a single note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(payload: NewNotePayload): Promise<Note> { createNote", "description": "Creates a new note with a title and content.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(id: string, payload: NewNotePayload): Promise<Note> { updateNote", "description": "Updates an existing note identified by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string): Promise<void> { deleteNote", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export function isApiConfigured(): boolean { isApiConfigured", "description": "Checks if the API base URL is configured via environment variable.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "request"], "search-terms": ["api.service", "notes", "CRUD", "TypeScript", "environment variable"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "API_BASE", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^const API_BASE = import.meta.env.PUBLIC_NOTES_API_URL || 'http:\\/\\/localhost:8787\\/api';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "NewNotePayload", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^type NewNotePayload = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^    const body = await res.text().catch(() => '');$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^export async function createNote(payload: NewNotePayload): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^export async function deleteNote(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^export async function getNote(id: string): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isApiConfigured", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^export function isApiConfigured(): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^export async function listNotes(query?: string): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^  const q = query ? `?q=${encodeURIComponent(query)}` : '';$/", "language": "TypeScript", "kind": "constant", "scope": "listNotes", "scopeKind": "function"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^async function request<T>(path: string, options: RequestInit = {}): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^  const res = await fetch(url, {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^export async function updateNote(id: string, payload: NewNotePayload): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/simple-notes-application-163458-163489/notes_frontend/src/services/api.ts", "pattern": "/^  const url = `${API_BASE}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}], "hash": "16996d5fbc4ed756d0d4074c24df5f36", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/api.ts", "revision_history": [{"15": ""}]}